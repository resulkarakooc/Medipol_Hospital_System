<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQFKJepvCjAwA
        qpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQFKJepvCjAwA
        qpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQFKJepvCjAwA
        qpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQFKJepvCjAwAqpIBQNJ0XSduFXeMI+LI6G0KM/pwPBgK
        +Ej01vCMHhj3jbvFbeJ6sUdIKtrecZd4RpwQH4tvRW8DALi4s+LT0V7J+I04PK4ckibtBvGUeE98N3pP
        bICNOCf+ZxwTNwpJu7n94xHRnpgXRO+JCzBae5vjMXGVkLSNXSuOCy/rA7tT24N+L9orkJK2sHaBzovj
        e9F7MgLsDmfHK+K6IWlge0V7f//b0XvyAczgO3Fs7BOSNtlh8YnoPdkAZvSpuHNI2kB7xvPCxX1ARedH
        u1apfSxZ0ho7IP48ek8qgEo+GtcPSbvorvGV6D2RACpqe1o7nEzSTrp/nBm9JxBAZe2EwXZUsqRL9ag4
        L3pPHIBV0K4LeHRIurDHRe/JArCK2p4nLb4HRZuKe08SgFXUPt30yyEttnYLznaCVu8JArDKzo12W3Jp
        cd0snOUPLNkZ0fZCaTHtG6dE7wkBsCSfjHZnU2kRvSZ6TwSAJfqDkFa+o6L3BABYsl8MaWW7WpwWvcUP
        sGRtb/zRkFayl0Vv4QOwY8crQ1q5bhs+7w+wc22PPDiklep90VvwAPyr94S0Mt0xegsdgMty50CtTO+M
        3iIH4LL+LKTytfezegscgJ27VUile3n0FjcAO/fSkMp2xfha9BY3ADv3jbhSSCU7MnoLG4Bda3uoVLK3
        R29RA7Brbw6pXHuF2/0CbNw3o+2lUqkOjd6CBmDt7hpSqY6N3mIGYO2eGVKpHP0LsHknh1Sqr0RvMQOw
        dqeHVKZrRG8hA7B+1w6pRHeK3iIGYP3cHEhl+pXoLWIA1u9hIZXIJwAAxvlPIZXouOgtYgDW74Uhlcgd
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>