<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0I4d/x/5oCpjvwWMBQAAAABJRU5ErkJggg==
</value>
  </data>
</root>